@page "/login"
@using System.Text.Json



<div class="ma-6 d-flex justify-center">
    <MudChip T="string" Color="Color.Primary">
        <h3>User Registration Form</h3>

    </MudChip>
</div>
<div class="ma-6 d-flex justify-center">
    <MudCard Width="500px">
        <MudForm Model="loginModel" @ref="form" Validation="loginValidator.ValidateValue">
            <MudCardContent>
                @if (!string.IsNullOrEmpty(APIErrorMessages))
                {
                    <MudChip T="string" Class="d-flex justify-center" Color="Color.Error">
                        <p>@APIErrorMessages</p>

                    </MudChip>
                }
                
                <MudTextField @bind-Value="loginModel.Email"
                              For="@(() => loginModel.Email)"
                              Immediate="true"
                              Label="Email" />
                <MudTextField @bind-Value="loginModel.Password"
                              For="@(() => loginModel.Password)"
                              Immediate="true"
                              Label="Password" InputType="InputType.Password" />
               
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="LoginAsync" >Login</MudButton>
            </MudCardActions>
        </MudForm>
    </MudCard>
</div>

@code {
     LoginVm loginModel = new LoginVm();
     LoginValidationVm loginValidator = new LoginValidationVm();

    MudForm form;

    string APIErrorMessages;

    private async Task LoginAsync()
    {
        await form.Validate();
        if (form.IsValid)
        {
            
        }
    }
}